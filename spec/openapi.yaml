openapi: 3.0.0
info:
  x-logo:
    backgroundColor: "#FAFAFA"
    url: "https://user-images.githubusercontent.com/1558992/70795610-18692580-1d98-11ea-89da-619df14eed53.png"
  title: Utrust for Developers
  description: |
    Welcome to the Utrust documentation for Developers. Here you will find
    everything you need to start accepting crypto payments in your online store
    or website easily with Utrust.


    # Basics

    In this section you can find a set of concepts that will help you understand
    how Utrust handles payments, so that you can integrate our payment method
    without any trouble.

    ## 0. Before you start

    Be aware Utrust Payments have the following limitations:

    > üíµ You can only create orders in **EUR, GBP or USD** (and you must choose one!);

    > ‚è∞ Our payment confirmation can take **up to 2 hours**;

    > üåç Our Payment Widget is only available in **English**.


    ## 1. Checkout process

    Our payment flow is **asynchronous**; the customer has 15 minutes to choose
    the cryptocurrency and issue a transaction in the respective blockchain,
    sending the requested funds to the address we provided.

    Once we detect the pending transaction, which usually happens in a matter of
    seconds, we recognize the payment and redirect the user to the merchant
    success callback URL.

    Upon confirmation of the transaction, which can take up to 2 hours, we send
    a notification to the merchant store or website via a [webhook](#section/Basics/4.-Webhook).

    In more detail, this flow has 6 stages:

    <div style="max-width: 650px; margin: 28px auto;">
      <img src="https://user-images.githubusercontent.com/1558992/70262908-1b0ebe00-178d-11ea-8825-2d341e7cba1b.png" alt="Checkout process diagram" />
    </div>

    1. [**Merchant**] On checkout, the merchant system sends the order details to
       create it on our server, getting a `redirect_url` in the response 
       (see [the create order endpoint](https://docs.api.utrust.com/#operation/createOrder)).
    2. [**Merchant**] Redirects users to the provided URL, which shows them the
       Utrust Payment widget.
    3. [**Utrust**] Users pay for the order, seeing a "Payment Complete"
       message. Utrust also sends them an email with the detected payment
       details. This completes the user interaction.
    4. [**Utrust**] Redirects the customer back to the `return_url` provided
       when the order was created.
    5. [**Utrust**] It takes some time to confirm transactions (minutes or hours,
       depending on the blockchain). Once confirmed, Utrust sends an HTTP
       request to the Merchant system notifying the payment was received.
    6. [**Store**] Verifies and validates the request, and, if valid, finalizes
       the order.


    ## 2. Try our flow

    The best way to learn about what we do is by trying it out yourself. For
    this you need an Ethereum wallet and some "test" money.
    Any wallet will do, but we recommend using
    [MetaMask](https://metamask.io/) due to its ease of use.
    After installing, make sure to change to the Ropsten Test Network, which
    is what we use in our sandbox environment.

    ![MetaMask_wallet](https://user-images.githubusercontent.com/1558992/70264200-e94b2680-178f-11ea-8212-885c5235c553.png)

    When you are ready, go to our [Sandbox online store](https://sandbox.store.utrust.com)
    and give it a spin by selecting an item and proceeding to checkout.
    Choose the Utrust payment method.
    Once you proceed to the payment, you will see Utrust Payment Widget.

    ![Utrust_payment_widget_on_sandbox_store](https://user-images.githubusercontent.com/1558992/70264232-f700ac00-178f-11ea-8b21-5c3708efcb3d.png)

    Select the ETH currency. The widget will then show you a QR Code with the
    payment details. If using Metamask, change to the Manual tab, and copy the
    address.

    ![Utrust_payment_widget_awaiting](https://user-images.githubusercontent.com/1558992/70264267-07188b80-1790-11ea-816b-bf4e0839f7d4.png)

    Open Metamask, and send the shown value in ETH to the provided address.

    ![MetaMask_filled](https://user-images.githubusercontent.com/1558992/70264269-07188b80-1790-11ea-9655-e162e90f6d3b.png)

    Wait some seconds, and the widget should change to show the payment is
    complete.

    ![Utrust_payment_widget_completed](https://user-images.githubusercontent.com/1558992/70264270-07188b80-1790-11ea-98dd-d0f3d45d7f28.png)

    This is not a payment confirmation yet, but it's a good indication that the
    payment will go through. However, only when we have a real confirmation will
    we send you the notifications, via [webhook](#section/Basics/4.-Webhook). 


    ## 3. Build the order

    Assuming you now have a clear understanding of the flow, let's integrate
    your system.


    ### 3.1. Sandbox and Production

    In addition to the real-world payment processing environment, Utrust offers
    developers an environment where they can test their integration using
    not-so-valuable test money. We call these environments Production and
    Sandbox, respectively.

    The two environments are identical for most of the time, differing only in
    that Production uses blockchains mainnets, and Sandbox uses the respective
    testnets.

    We also release new features to Sandbox a bit before them reaching
    Production, but this usually happens in a couple of hours.

    Depending on which environment they want to target, developers must choose
    the appropriate hostname to target their requests. Production uses the
    `utrust.com` domain, whereas Sandbox uses the `sandbox-utrust.com` domain.


    ### 3.2. Sign up for Sandbox

    To use our Sandbox environment
    [first you need a merchant account](https://merchants.sandbox-utrust.com/onboarding/sign-up).
    Remember Production is a separate environment, your real merchant account
    won't exist in Sandbox (but here you can have many).

    ![Merchant_Dashboard_signup](https://user-images.githubusercontent.com/1558992/70264271-07b12200-1790-11ea-810a-dafcc0b0d56f.png)


    ### 3.3. Authentication

    Upon sign up, you will receive an email with the access information. You
    must then generate credentials for your store, which can be done through
    your Utrust Merchant Dashboard. In there, go to the Organization Settings
    section and click on the _Generate Credentials_ button.

    ![Merchant_dashboard_organization](https://user-images.githubusercontent.com/1558992/70264272-07b12200-1790-11ea-989d-9ea206e32874.png)

    You‚Äôll then be shown the `API Key` and `Webhooks Secret` for your store.
    This information will not visible afterwards, make sure to save it.

    ![Merchant_dasboard_new_credentials](https://user-images.githubusercontent.com/1558992/70264273-07b12200-1790-11ea-91c5-70ca1b2ef16b.png)


    ### 3.4. Creating the order

    Orders are base concept to process payments in Utrust. To process a payment
    the system must first call the
    [create order endpoint](https://docs.api.utrust.com/#operation/createOrder).

    The response will then contain a URL to which users must be redirected. When
    the payment is processed Utrust redirects the user back to the system, using
    the URLs provided.


    ### 3.5. Going into production

    All tests went good and you want to move into production? To create a `production` account [go here](https://merchants.utrust.com/).
    You can sign up in production, but your account needs to be revised and enabled by the Utrust team.
    If you need to add more users, please let us know and we will add them manually to the same Organization.
    You will have to generate your production credentials.


    ## 4. Webhooks

    Merchant systems can be notified of events in the Utrust platform through
    webhooks. At the moment these events include:

    - Confirmation of the order payment;
    - Cancellation of the order.

    The URL to use for these webhooks is defined by the `callback_url` field
    when creating an order.

    All webhook requests are expected to respond with HTTP status 2xx in case
    of success. Any other status code, or the lack of a response, will be
    considered a failure. In that case Utrust will retry up to 15 times with an
    exponential back off following a Fibonacci sequence -- first retry happens
    after 1 minute, second happens 2 minutes after the first one, third happens
    3 minutes after the second one, etc.

    All requests sent by Utrust to the provided URL are signed for validation
    using the `Webhooks Secret` generated (see [3.3
    Authetication](#33-authentication)).

    When using our [integrations](#section/Integrations), webhooks are set and
    validated automatically as part of the order payment flow. For custom
    integrations we make available [libraries](#section/Libraries) able to
    validate the requests.

    For manual validation instructions, and further technical details, check
    the [Webhooks](https://docs.api.utrust.com/#tag/Webhooks) section in the
    [Utrust API](https://docs.api.utrust.com) documentation.


    ## 5. Assets

    The Utrust Merchant assets kit includes everything for using the official
    Utrust branding in your website. Download it
    [here](https://github.com/utrustdev/utrust-developers-page/files/3917494/Utrust.merchant.kit.v2.zip).


    # Integrations

    ## Magento 1

    ![Magento 1](https://user-images.githubusercontent.com/1558992/70810396-97bc2080-1dbb-11ea-8724-fb1ed032da18.png)

    Start accepting cryptocurrencies in your Magento 1 store with our module hosted on [GitHub](https://github.com/utrustdev/utrust-for-magento1).

    ## Magento 2

    ![Magento 2](https://user-images.githubusercontent.com/1558992/70810396-97bc2080-1dbb-11ea-8724-fb1ed032da18.png)

    Start accepting cryptocurrencies in your Magento 2 store with our module hosted on [GitHub](https://github.com/utrustdev/utrust-for-magento2).

    ## PrestaShop

    ![Prestashop](https://user-images.githubusercontent.com/1558992/70810397-97bc2080-1dbb-11ea-815a-32f389f3b0c3.png)

    Start accepting cryptocurrencies in your PrestaShop store with our module hosted on [GitHub](https://github.com/utrustdev/utrust-for-prestashop).

    ## WooCommerce

    ![Woocommerce](https://user-images.githubusercontent.com/1558992/70810398-9854b700-1dbb-11ea-8127-d926450a8e62.png)

    Start accepting cryptocurrencies in your WooCommerce store with our module hosted on [GitHub](https://github.com/utrustdev/utrust-for-woocommerce).

    # Libraries

    ## PHP

    We've put in place a simple PHP library to get you started easily with the core functionalities of our payment method. Available via composer:
    ```
    composer require utrust/utrust
    ```
    Check the code hosted on [GitHub](https://github.com/utrustdev/utrust-php).

    # APIs 

    Utrust provides two API's for your use: Stores API and Merchants API.

    [Utrust API Reference ‚Üí](https://docs.api.utrust.com)

paths: false
